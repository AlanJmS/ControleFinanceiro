// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int          @id @default(autoincrement())
  name     String
  email    String       @unique
  password String
  salary   Float @default(0)
  wallets  UserWallet[] @relation("UserToWallets")
  costs    Cost[]       @relation("UserToCosts")
}

model Wallet {
  id          Int          @id @default(autoincrement())
  name        String
  balance     Float
  costs       Cost[]       @relation("WalletToCosts")
  usersWallet UserWallet[] @relation("WalletToUsers")
}

model UserWallet {
  userId   Int
  walletId Int
  user     User   @relation("UserToWallets", fields: [userId], references: [id], onDelete: Cascade)
  wallet   Wallet @relation("WalletToUsers", fields: [walletId], references: [id], onDelete: Cascade)

  @@id([userId, walletId])
}

model Cost {
  id       Int      @id @default(autoincrement())
  name     String
  amount   Float
  date     DateTime
  wallet   Wallet   @relation("WalletToCosts", fields: [walletId], references: [id], onDelete: Cascade)
  walletId Int
  user     User     @relation("UserToCosts", fields: [userId], references: [id], onDelete: Cascade)
  userId   Int
  category EnumCategory
}

enum EnumCategory {
  Geral
  Alimentação
  Saúde
  Entretenimento
  Transporte
}